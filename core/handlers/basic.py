from aiogram.types import Message
from aiogram.filters import CommandObject

from core.keyboards.reply import reply_keyboard
from core.keyboards.inline import get_inline_keyboard

from parser.main import parser

from core.utils.dbconnect import Request


async def get_start(message: Message, request: Request):
    await request.add_data(message.from_user.id, message.from_user.username, message.from_user.first_name,
                           0, 0)
    await message.answer(f"""<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!
                            üîπ–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.
                            üîπ<a href="https://t.me/xdxd_vou">–°–≤—è–∂–∏—Å—å —Å–æ –º–Ω–æ–π</a>
                            üîπ–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ä–µ—à–∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º.</b>""", parse_mode="HTML",
                         reply_markup=reply_keyboard)


async def get_personal_account(message: Message, request: Request, user_id=None):
    if user_id:
        result_list = await request.get_info(user_id)
    else:
        result_list = await request.get_info(message.from_user.id)
    for result in result_list:
        await message.answer(f"""üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{result["user_name"]}
                                ü™™ ID: {result["user_id"]}
                                üí∞ –ë–∞–ª–∞–Ω—Å: {result["balance"]} ‚ÇΩ
                                üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫: {result["purchase_count"]}""", reply_markup=get_inline_keyboard())


async def buy_parser(message: Message, request: Request):
    await message.answer("–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–∞—Ä—Å–µ—Ä–∞ - 50 —Ä—É–±–ª–µ–π")
    result = await request.get_balance(message.from_user.id)
    if result - 50 > 0:
        await message.answer("–ü–∞—Ä—Å–µ—Ä –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω‚úÖ")
        await request.decreased_balance(50, message.from_user.id)
        product = await parser()
        for i in product:
            await message.answer(f"{i[0]} {i[1]}")
    else:
        await message.answer("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")
